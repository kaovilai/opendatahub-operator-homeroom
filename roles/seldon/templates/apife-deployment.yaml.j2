apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels: &Labels
    app.kubernetes.io/name: release-name
    app.kubernetes.io/component: seldon-core-apiserver
    app: seldon-apiserver-container-app
    chart: seldon-core-0.2.8-SNAPSHOT
    release: release-name
    heritage: Tiller
    component: seldon-core
  name: release-name-seldon-apiserver
  namespace: "{{ meta.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels: *Labels
  template:
    metadata:
      annotations:
        prometheus.io/path: /prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels: *Labels
    spec:
      containers:
      - env:
        - name: SELDON_ENGINE_KAFKA_SERVER
          value: kafka:9092
        - name: SELDON_CLUSTER_MANAGER_REDIS_HOST
          value: release-name-redis-master
        - name: ENGINE_SERVER_GRPC_PORT
          value: '5001'
        - name: ENGINE_SERVER_PORT
          value: '8000'
        - name: SELDON_SINGLE_NAMESPACE
          value: 'true'
        - name: SELDON_CLUSTER_MANAGER_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: seldonio/apife:0.2.8-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: seldon-apiserver-container
        volumeMounts:
          - name: podinfo
            mountPath: /etc/podinfo
            readOnly: false
        securityContext: {}
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 5000
          protocol: TCP
      dnsPolicy: ClusterFirst
      serviceAccountName: seldon
      terminationGracePeriodSeconds: 30
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: release-name
    app.kubernetes.io/component: seldon-core-apiserver
    app: seldon-apiserver-container-app
  name: release-name-seldon-apiserver
  namespace: "{{ meta.namespace }}"
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: grpc
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: seldon-apiserver-container-app
  sessionAffinity: None
  type: NodePort 
status:
  loadBalancer: {}
